üîô [Retornar √† documenta√ß√£o principal](../../README.md)

# Diagrama de Sequ√™ncia: Configurar Notifica√ß√µes

Este diagrama descreve as intera√ß√µes para configurar notifica√ß√µes.

## Diagrama de Sequ√™ncia

```mermaid
sequenceDiagram
    participant U as Usu√°rio
    participant F as Frontend (Vue.js)
    participant B as Backend (Laravel)
    participant DB as Banco (MySQL)

    U->>F: Acessa tela de notifica√ß√µes
    F->>B: GET /notifications
    B->>DB: Consulta configura√ß√µes
    DB-->>B: Configura√ß√µes atuais
    B-->>F: Resposta: { notificacoes: { email, push } }
    F-->>U: Exibe formul√°rio com configura√ß√µes
    U->>F: Edita configura√ß√µes (email.saldoBaixo, push.vencimentoFatura, etc.)
    F->>B: POST /notifications
    B->>DB: Atualiza configura√ß√µes
    DB-->>B: Configura√ß√µes atualizadas
    B-->>F: Resposta: Configura√ß√µes atualizadas
    F-->>U: Exibe "Configura√ß√µes salvas"
```

## Descri√ß√£o

### Fluxo Principal

1. O usu√°rio acessa a tela de notifica√ß√µes.
2. O frontend envia `GET /notifications` para obter configura√ß√µes atuais.
3. O backend retorna configura√ß√µes (`email`, `push`).
4. O frontend exibe formul√°rio com valores atuais.
5. O usu√°rio edita configura√ß√µes (e.g., ativa `email.saldoBaixo`).
6. O frontend envia `POST /notifications`.
7. O backend atualiza as configura√ß√µes no banco.
8. Retorna confirma√ß√£o, e o frontend exibe "Configura√ß√µes salvas".

### Fluxos Alternativos

- **A1**: Dados inv√°lidos ‚Üí Backend retorna erro 422 ("Dados inv√°lidos").
- **A2**: Erro no banco ‚Üí Backend retorna erro 500.

### Notas T√©cnicas

- **Frontend**: Vue.js, Vuetify, Axios.
- **Backend**: Laravel com Eloquent (`NotificationSetting`).
  - Endpoints: `GET /notifications`, `POST /notifications` (controlador `NotificationController`).
- **Banco**: Tabela `notification_settings` (`user_id`, `email_settings`, `push_settings`).
- **Seguran√ßa**: JWT para autentica√ß√£o.
- **Integra√ß√£o**: Usa AWS SNS para notifica√ß√µes push (ass√≠ncrono).