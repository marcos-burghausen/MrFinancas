üîô [Retornar √† documenta√ß√£o principal](../../README.md)

# Diagrama de Sequ√™ncia: Exportar para Calend√°rio

Este diagrama descreve as intera√ß√µes para exportar uma transa√ß√£o para o Google Calendar.

## Diagrama de Sequ√™ncia

```mermaid
sequenceDiagram
    participant U as Usu√°rio
    participant F as Frontend (Vue.js)
    participant B as Backend (Laravel)
    participant DB as Banco (MySQL)
    participant G as Google Calendar

    U->>F: Acessa tela de transa√ß√µes
    F->>B: GET /transacoes
    B-->>F: Lista de transa√ß√µes
    F-->>U: Exibe lista
    U->>F: Seleciona transa√ß√£o e clica "Exportar"
    F->>F: Verifica token OAuth (localStorage)
    alt Token v√°lido
        F->>B: POST /calendar/export (id)
    else Token inv√°lido
        F->>G: Autentica via OAuth 2.0
        G-->>F: Token retornado
        F->>F: Armazena token
        F->>B: POST /calendar/export (id)
    end
    B->>DB: Valida transa√ß√£o
    DB-->>B: Transa√ß√£o v√°lida
    B->>G: Cria evento (summary, start, end)
    G-->>B: Evento criado
    B->>DB: Salva evento_id
    DB-->>B: Evento salvo
    B-->>F: Resposta: { event_id, transacao_id }
    F-->>U: Exibe "Evento exportado"
```

## Descri√ß√£o

### Fluxo Principal

1. O usu√°rio acessa a tela de transa√ß√µes.
2. O frontend lista transa√ß√µes via `GET /transacoes`.
3. O usu√°rio seleciona uma transa√ß√£o e clica "Exportar para calend√°rio".
4. O frontend verifica o token OAuth em `localStorage`:
   - Se v√°lido, envia `POST /calendar/export`.
   - Se inv√°lido, autentica com Google Calendar (OAuth 2.0), armazena token, e envia `POST /calendar/export`.
5. O backend valida a transa√ß√£o no banco.
6. Cria um evento no Google Calendar.
7. Salva o `event_id` na tabela `calendar_events`.
8. Retorna confirma√ß√£o, e o frontend exibe "Evento exportado".

### Fluxos Alternativos

- **A1**: Transa√ß√£o inv√°lida ‚Üí Backend retorna erro 404 ("Transa√ß√£o n√£o encontrada").
- **A2**: Falha na autentica√ß√£o OAuth ‚Üí Frontend exibe erro 401.
- **A3**: Erro no Google Calendar ‚Üí Backend retorna erro 500 e notifica via AWS SNS.

### Notas T√©cnicas

- **Frontend**: Vue.js, Google API Client (`gapi`), Axios.
- **Backend**: Laravel com Google Calendar API (PHP Client).
  - Endpoint: `POST /calendar/export` (controlador `CalendarController`).
- **Banco**: Tabelas `transactions`, `calendar_events` (`transaction_id`, `event_id`).
- **Seguran√ßa**: JWT para API, OAuth 2.0 para Google Calendar.
- **Integra√ß√£o**: Google Calendar (scope: `https://www.googleapis.com/auth/calendar.events`).