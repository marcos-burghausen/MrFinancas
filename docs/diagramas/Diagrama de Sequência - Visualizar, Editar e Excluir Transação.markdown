üîô [Retornar √† documenta√ß√£o principal](../../README.md)

# Diagrama de Sequ√™ncia: Visualizar, Editar e Excluir Transa√ß√£o

Este diagrama descreve as intera√ß√µes para visualizar, editar e excluir transa√ß√µes financeiras.

## Diagrama de Sequ√™ncia

```mermaid
sequenceDiagram
    participant U as Usu√°rio
    participant F as Frontend (Vue.js)
    participant B as Backend (Laravel)
    participant DB as Banco (MySQL)

    U->>F: Acessa tela de transa√ß√µes
    F->>B: GET /transacoes?dataInicio&dataFim&categoria&contaId&tipo
    B->>DB: Consulta transa√ß√µes com filtros
    DB-->>B: Lista de transa√ß√µes
    B-->>F: Resposta: { total, paginas, paginaAtual, transacoes }
    F-->>U: Exibe lista
    U->>F: Seleciona transa√ß√£o e escolhe a√ß√£o
    alt Visualizar
        F->>B: GET /transacoes/{id}
        B->>DB: Busca transa√ß√£o
        DB-->>B: Transa√ß√£o encontrada
        B-->>F: Resposta: { id, descricao, valor, data, tipo, categoria, conta }
        F-->>U: Exibe detalhes em modal
    else Editar
        F->>U: Exibe formul√°rio com dados
        U->>F: Edita dados
        F->>B: PUT /transacoes/{id} (descricao, valor, data, tipo, categoriaId, contaId)
        B->>DB: Valida dados
        DB-->>B: Dados v√°lidos
        B->>DB: Atualiza transa√ß√£o
        B->>DB: Atualiza saldo da conta
        DB-->>B: Transa√ß√£o e saldo atualizados
        B-->>F: Resposta: Transa√ß√£o atualizada
        F-->>U: Exibe "Transa√ß√£o atualizada"
    else Excluir
        U->>F: Confirma exclus√£o
        F->>B: DELETE /transacoes/{id}
        B->>DB: Verifica depend√™ncias (faturas)
        DB-->>B: Sem depend√™ncias
        B->>DB: Remove transa√ß√£o (soft delete)
        B->>DB: Atualiza saldo da conta
        DB-->>B: Transa√ß√£o removida
        B-->>F: Resposta: 204
        F-->>U: Exibe "Transa√ß√£o exclu√≠da"
    end
    F->>B: GET /transacoes (recarrega lista)
    B-->>F: Nova lista
    F-->>U: Exibe lista atualizada
```

## Descri√ß√£o

### Fluxo Principal

1. O usu√°rio acessa a tela de transa√ß√µes.
2. O frontend envia `GET /transacoes` com filtros (`dataInicio`, `dataFim`, `categoria`, `contaId`, `tipo`).
3. O backend retorna lista paginada de transa√ß√µes.
4. O frontend exibe a lista em tabela Vuetify.
5. O usu√°rio seleciona uma transa√ß√£o e escolhe:
   - **Visualizar**: Envia `GET /transacoes/{id}`, exibe detalhes em modal.
   - **Editar**: Exibe formul√°rio, envia `PUT /transacoes/{id}`, atualiza transa√ß√£o e saldo, exibe confirma√ß√£o.
   - **Excluir**: Confirma exclus√£o, envia `DELETE /transacoes/{id}`, remove transa√ß√£o (soft delete), atualiza saldo, exibe confirma√ß√£o.
6. O frontend recarrega a lista com `GET /transacoes`.

### Fluxos Alternativos

- **A1**: Nenhuma transa√ß√£o encontrada ‚Üí Backend retorna erro 404 ("Nenhuma transa√ß√£o encontrada").
- **A2**: Dados inv√°lidos (editar) ‚Üí Backend retorna erro 422 ("Dados inv√°lidos").
- **A3**: Transa√ß√£o vinculada (excluir) ‚Üí Backend retorna erro 409 ("Transa√ß√£o vinculada").
- **A4**: Erro no banco ‚Üí Backend retorna erro 500 e registra falha.

### Notas T√©cnicas

- **Frontend**: Vue.js, Vuetify, Axios.
- **Backend**: Laravel com Eloquent (`Transaction`, `Account`, `Invoice`).
  - Endpoints: `GET /transacoes`, `GET /transacoes/{id}`, `PUT /transacoes/{id}`, `DELETE /transacoes/{id}` (controlador `TransactionController`).
- **Banco**: Tabelas `transactions` (`id`, `type`, `amount`, `date`, `account_id`, `category_id`, `deleted_at`), `accounts` (`balance`), `invoices` (`card_id`).
- **Seguran√ßa**: JWT no header `Authorization: Bearer {token}`.
- **Transa√ß√µes**: Usa transa√ß√µes SQL para consist√™ncia.