üîô [Retornar √† documenta√ß√£o principal](../../README.md)

# Fluxo: Configurar Notifica√ß√µes

Este documento descreve o processo de configura√ß√£o de notifica√ß√µes para vencimentos de transa√ß√µes e metas financeiras.

## Diagrama de Fluxo

```mermaid
flowchart TD
    A["In√≠cio"] --> B["Usu√°rio acessa tela de notifica√ß√µes (Vue.js)"]
    B --> C["Seleciona tipo: vencimentos, metas"]
    C --> D["Configura: { enabled: boolean, days_before: int, time: HH:MM, channel: email|push }"]
    D --> E["Frontend envia POST /api/notifications"]
    E --> F["Backend valida: days_before <= 3, time v√°lido"]
    F --> G{"Configura√ß√£o v√°lida?"}
    G -->|Sim| H["Salva em notifications e settings.notification_preferences"]
    H --> I["Agenda notifica√ß√µes via Laravel Queue (Horizon)"]
    I --> J["Registra a√ß√£o em logs (a√ß√£o: configure_notification)"]
    J --> K["Frontend exibe: 'Configura√ß√£o salva'"]
    K --> L["Retorna √† tela de configura√ß√µes"]
    L --> M["Fim"]
    G -->|N√£o| N["Backend retorna erro 422: 'Dados inv√°lidos'"]
    N --> O["Frontend exibe erro e retorna ao formul√°rio"]
    O --> D
```

## Descri√ß√£o do Processo

1. Usu√°rio acessa a tela de notifica√ß√µes no frontend (Vue.js com Vuetify).
2. Seleciona o tipo de notifica√ß√£o (vencimentos ou metas).
3. Configura op√ß√µes:
   - Ativar/desativar (`enabled`).
   - Anteced√™ncia (0-3 dias, `days_before`).
   - Hor√°rio de envio (`time`, formato HH:MM).
   - Canal (email ou push, `channel`).
4. Frontend envia requisi√ß√£o `POST /api/notifications`.
5. Backend valida:
   - `days_before` ‚â§ 3.
   - `time` no formato HH:MM (00:00-23:59).
   - `channel` v√°lido.
6. Se v√°lido:
   - Salva configura√ß√£o em `notifications` e atualiza `settings.notification_preferences`.
   - Agenda notifica√ß√µes via Laravel Queue (Horizon).
   - Registra a√ß√£o em `logs` (a√ß√£o: `configure_notification`).
   - Frontend exibe confirma√ß√£o.
7. Se inv√°lido:
   - Backend retorna erro 422.
   - Frontend exibe erro e retorna ao formul√°rio.

## Regras de Neg√≥cio

- Notifica√ß√µes de vencimentos baseadas em `transactions.date` ou `invoices.due_date`.
- Anteced√™ncia m√°xima: 3 dias.
- Hor√°rios ajustados ao fuso hor√°rio do usu√°rio (armazenado em `settings`).
- Notifica√ß√µes push exigem permiss√£o (armazenada em `settings.notification_preferences`).
- Configura√ß√µes podem ser desativadas por tipo.

## Notas T√©cnicas

- **Frontend**: Vue.js com Vuetify (formul√°rios reativos), Axios para requisi√ß√µes.
- **Backend**: Laravel com Eloquent (modelos `Notification`, `Setting`), Horizon para filas.
- **Endpoint**: `POST /api/notifications`: `{ type: string, enabled: boolean, days_before: int, time: string, channel: string }`.
- **Banco**: Tabelas `notifications` (`type`, `enabled`, `days_before`, `time`, `user_id`), `settings` (`notification_preferences`), `logs` (`action`, `details`).
- **Integra√ß√µes**:
  - AWS SNS/Firebase (Notification Service) para push.
  - AWS SES (Email Service) para e-mails.
  - Integra com `transactions` e `invoices` para vencimentos.
- **Seguran√ßa**: JWT para autentica√ß√£o, HTTPS, valida√ß√£o de permiss√µes push.