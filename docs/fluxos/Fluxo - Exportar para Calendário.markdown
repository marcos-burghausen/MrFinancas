üîô [Retornar √† documenta√ß√£o principal](../../README.md)

# Fluxo: Exportar para Calend√°rio

Este documento descreve o processo de exporta√ß√£o de vencimentos de transa√ß√µes para o Google Calendar.

## Diagrama de Fluxo

```mermaid
flowchart TD
    A["In√≠cio"] --> B["Usu√°rio acessa tela de transa√ß√µes (Vue.js)"]
    B --> C["Seleciona transa√ß√£o com vencimento"]
    C --> D["Clica em 'Exportar para calend√°rio'"]
    D --> E["Frontend verifica token OAuth em localStorage"]
    E --> F{"Token v√°lido?"}
    F -->|Sim| G["Frontend envia POST /api/calendar/export"]
    F -->|N√£o| H["Frontend autentica com Google Calendar (OAuth 2.0)"]
    H --> I{"Autentica√ß√£o bem-sucedida?"}
    I -->|Sim| G
    I -->|N√£o| J["Frontend exibe erro 401: 'Falha na autentica√ß√£o'"]
    J --> K["Retorna √† lista de transa√ß√µes"]
    G --> L["Backend valida transa√ß√£o em transactions"]
    L --> M{"Transa√ß√£o v√°lida?"}
    M -->|Sim| N["Backend cria evento via Google Calendar API"]
    N --> O["Salva evento_id em calendar_events"]
    O --> P["Registra a√ß√£o em logs (a√ß√£o: export_calendar)"]
    P --> Q["Frontend exibe: 'Evento exportado com sucesso'"]
    Q --> K
    M -->|N√£o| R["Backend retorna erro 404: 'Transa√ß√£o inv√°lida'"]
    R --> S["Frontend exibe erro"]
    S --> K
    K --> T["Fim"]
```

## Descri√ß√£o do Processo

1. Usu√°rio acessa a tela de transa√ß√µes no frontend (Vue.js com Vuetify).
2. Seleciona uma transa√ß√£o com data de vencimento (`transactions.date`).
3. Clica em ‚ÄúExportar para calend√°rio‚Äù.
4. Frontend verifica token OAuth em `localStorage`:
   - Se v√°lido, prossegue.
   - Se inv√°lido, autentica com Google Calendar (OAuth 2.0, scope: `https://www.googleapis.com/auth/calendar.events`).
5. Se autentica√ß√£o falhar, exibe erro 401 e retorna √† lista.
6. Frontend envia `POST /api/calendar/export` com `{ transaction_id }`.
7. Backend valida `transaction_id` em `transactions`:
   - Se v√°lido, cria evento no Google Calendar:
     - `summary`: ‚Äú{type}: {description}‚Äù (ex.: ‚ÄúDespesa: Aluguel‚Äù).
     - `start`/`end`: `transactions.date` (formato ISO 8601).
     - `description`: ‚ÄúValor: R${amount}, Conta: {account.name}‚Äù.
   - Salva `event_id` em `calendar_events` para rastreamento.
   - Registra a√ß√£o em `logs` (a√ß√£o: `export_calendar`).
   - Frontend exibe confirma√ß√£o.
8. Se transa√ß√£o inv√°lida, backend retorna erro 404, e frontend exibe erro.
9. Retorna √† lista de transa√ß√µes.

## Regras de Neg√≥cio

- Apenas transa√ß√µes com `date` n√£o nulo s√£o export√°veis.
- T√≠tulos do evento: ‚ÄúDespesa: {description}‚Äù, ‚ÄúReceita: {description}‚Äù, ‚ÄúCart√£o: {description}‚Äù.
- Eventos criados no calend√°rio padr√£o do usu√°rio.
- Token OAuth armazenado em `localStorage` para reutiliza√ß√£o.
- Eventos vinculados a transa√ß√µes via `calendar_events`.

## Notas T√©cnicas

- **Frontend**: Vue.js, Vuetify, Axios, Google API Client (`gapi`).
- **Backend**: Laravel, Eloquent (modelos `Transaction`, `CalendarEvent`), Google Calendar API (PHP Client Library).
- **Endpoint**: `POST /api/calendar/export`: `{ transaction_id: int }` ‚Üí `{ event_id: string }`.
- **Banco**: 
  - Tabelas: `transactions` (`id`, `type`, `description`, `amount`, `date`, `account_id`), `calendar_events` (`transaction_id`, `event_id`, `user_id`), `logs` (`action`, `details`, `user_id`).
  - Relacionamentos: `calendar_events` ‚Üí `transactions` (1:1).
- **Integra√ß√µes**: 
  - Google Calendar API (scope: `https://www.googleapis.com/auth/calendar.events`).
  - Componente: Calendar Service (Diagrama de Componentes).
- **Seguran√ßa**: 
  - JWT para autentica√ß√£o da API.
  - OAuth 2.0 para Google Calendar.
  - HTTPS para todas as comunica√ß√µes.
  - Valida√ß√£o de `user_id` para garantir propriedade dos dados.

## Integra√ß√µes

- Integra com `transactions` para recuperar dados de vencimento.
- Eventos exportados aparecem em relat√≥rios de vencimentos.
- Usa AWS SNS para notificar falhas cr√≠ticas (ex.: erro na API do Google).
- Componente de log (Log Service) registra todas as a√ß√µes.

## Alinhamento com Caso de Uso

Este fluxo corresponde ao `Caso de Uso - Exportar para Calend√°rio`, detalhando a autentica√ß√£o OAuth, cria√ß√£o de eventos e tratamento de erros, com maior granularidade t√©cnica (ex.: endpoints, tabelas).