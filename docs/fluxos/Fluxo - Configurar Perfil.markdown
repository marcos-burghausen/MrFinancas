üîô [Retornar √† documenta√ß√£o principal](../../README.md)

# Fluxo: Configurar Perfil

Este documento descreve o processo de configura√ß√£o do perfil do usu√°rio, incluindo avatar, senha, dados pessoais e temas.

## Diagrama de Fluxo

```mermaid
flowchart TD
    A["In√≠cio"] --> B["Usu√°rio acessa tela de perfil (Vue.js)"]
    B --> C["Escolhe a√ß√£o"]
    C --> D{"Alterar avatar?"}
    D -->|Sim| E["Faz upload ou escolhe avatar predefinido"]
    E --> F["Frontend envia POST /api/profile/avatar"]
    F --> G{"Arquivo v√°lido? (PNG/JPG, <=2MB)"}
    G -->|Sim| H["Backend salva avatar em users.avatar"]
    H --> I["Registra a√ß√£o em logs (a√ß√£o: update_avatar)"]
    I --> J["Frontend exibe: 'Avatar atualizado'"]
    J --> K["Retorna ao perfil"]
    G -->|N√£o| L["Backend retorna erro 422: 'Formato inv√°lido'"]
    L --> M["Frontend retorna ao formul√°rio"]
    M --> E
    D -->|N√£o| N{"Alterar senha?"}
    N -->|Sim| O["Insere senha atual e nova"]
    O --> P["Frontend envia POST /api/profile/password"]
    P --> Q{"Senhas v√°lidas? (atual correta, nova forte)"}
    Q -->|Sim| R["Backend atualiza users.password"]
    R --> S["Registra a√ß√£o em logs (a√ß√£o: update_password)"]
    S --> T["Frontend exibe: 'Senha atualizada'"]
    T --> K
    Q -->|N√£o| U["Backend retorna erro 422: 'Senha atual incorreta'"]
    U --> V["Frontend retorna ao formul√°rio"]
    V --> O
    N -->|N√£o| W{"Editar dados pessoais?"}
    W -->|Sim| X["Edita: endere√ßo, documentos"]
    X --> Y["Frontend envia POST /api/profile/data"]
    Y --> Z["Backend valida e salva em users"]
    Z --> AA["Registra a√ß√£o em logs (a√ß√£o: update_data)"]
    AA --> AB["Frontend exibe: 'Dados salvos'"]
    AB --> K
    W -->|N√£o| AC{"Alterar tema?"}
    AC -->|Sim| AD["Seleciona tema: claro/escuro"]
    AD --> AE["Frontend envia POST /api/profile/theme"]
    AE --> AF["Backend salva em users.theme"]
    AF --> AG["Registra a√ß√£o em logs (a√ß√£o: update_theme)"]
    AG --> K
    AC -->|N√£o| K
    K --> AH["Fim"]
```

## Descri√ß√£o do Processo

1. Usu√°rio acessa a tela de perfil no frontend.
2. Escolhe uma a√ß√£o:
   - **Alterar Avatar**:
     - Faz upload (PNG/JPG, ‚â§2MB) ou escolhe predefinido.
     - Frontend envia `POST /api/profile/avatar`.
     - Backend valida e salva em `users.avatar`.
     - Registra em `logs` e exibe confirma√ß√£o.
   - **Alterar Senha**:
     - Insere senha atual e nova (m√≠nimo 8 caracteres, letras e n√∫meros).
     - Frontend envia `POST /api/profile/password`.
     - Backend valida (senha atual correta, nova forte) e atualiza `users.password`.
     - Registra em `logs` e exibe confirma√ß√£o.
   - **Editar Dados Pessoais**:
     - Edita endere√ßo e documentos (criptografados).
     - Frontend envia `POST /api/profile/data`.
     - Backend valida e salva em `users`.
     - Registra em `logs` and exibe confirma√ß√£o.
   - **Alterar Tema**:
     - Seleciona tema (claro/escuro).
     - Frontend envia `POST /api/profile/theme`.
     - Backend salva em `users.theme`.
     - Registra em `logs` e aplica tema.
3. Retorna √† tela de perfil.

## Regras de Neg√≥cio

- Avatares: PNG/JPG, ‚â§2MB.
- Senhas: `^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$`.
- Documentos: Criptografados com AES-256.
- Temas: Aplicados imediatamente, salvos em `users.theme`.

## Notas T√©cnicas

- **Frontend**: Vue.js com Vuetify, Axios.
- **Backend**: Laravel, Eloquent (modelo `User`).
- **Endpoints**:
  - `POST /api/profile/avatar`: Multipart com arquivo.
  - `POST /api/profile/password`: `{ current_password: string, new_password: string }`.
  - `POST /api/profile/data`: `{ address: string, documents: string }`.
  - `POST /api/profile/theme`: `{ theme: string }`.
- **Banco**: Tabela `users` (`avatar`, `password`, `address`, `documents`, `theme`), `logs` (`action`, `details`).
- **Integra√ß√µes**: AWS S3 para avatares, notifica√ß√µes para confirma√ß√µes.
- **Seguran√ßa**: JWT, HTTPS, bcrypt, AES-256.