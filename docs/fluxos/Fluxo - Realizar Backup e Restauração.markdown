üîô [Retornar √† documenta√ß√£o principal](../../README.md)

# Fluxo: Realizar Backup e Restaura√ß√£o

Este documento descreve o processo de backup e restaura√ß√£o de dados do usu√°rio (contas, transa√ß√µes, categorias).

## Diagrama de Fluxo

```mermaid
flowchart TD
    A["In√≠cio"] --> B["Usu√°rio acessa tela de backup (Vue.js)"]
    B --> C["Escolhe a√ß√£o"]
    C --> D{"Fazer backup?"}
    D -->|Sim| E["Seleciona dados: accounts, transactions, categories"]
    E --> F["Frontend envia POST /api/backup"]
    F --> G["Backend gera JSON criptografado (AES-256)"]
    G --> H["Salva em AWS S3 ou inicia download"]
    H --> I["Registra a√ß√£o em logs (a√ß√£o: backup)"]
    I --> J["Frontend exibe: 'Backup conclu√≠do'"]
    J --> K["Retorna √† tela"]
    K --> L["Fim"]
    D -->|N√£o| M{"Restaurar dados?"}
    M -->|Sim| N["Faz upload de arquivo JSON"]
    N --> O["Frontend envia POST /api/restore"]
    O --> P["Backend valida e descriptografa"]
    P --> Q{"Arquivo v√°lido?"}
    Q -->|Sim| R["Backend importa dados"]
    R --> S["Atualiza saldos em accounts"]
    S --> T["Registra a√ß√£o em logs (a√ß√£o: restore)"]
    T --> U["Frontend exibe: 'Restaura√ß√£o conclu√≠da'"]
    U --> K
    Q -->|N√£o| V["Backend retorna erro 422: 'Arquivo inv√°lido'"]
    V --> W["Frontend retorna ao upload"]
    W --> N
    M -->|N√£o| K
```

## Descri√ß√£o do Processo

1. Usu√°rio acessa a tela de backup no frontend.
2. Escolhe a√ß√£o:
   - **Backup**:
     - Seleciona dados (`accounts`, `transactions`, `categories`).
     - Frontend envia `POST /api/backup`.
     - Backend gera JSON: `{ "accounts": [], "transactions": [], "categories": [] }`, criptografa (AES-256).
     - Salva em AWS S3 ou inicia download.
     - Registra em `logs`, exibe confirma√ß√£o.
   - **Restaura√ß√£o**:
     - Faz upload de JSON.
     - Frontend envia `POST /api/restore`.
     - Backend descriptografa, valida formato e `user_id`, importa dados.
     - Atualiza `accounts.balance`, registra em `logs`, exibe confirma√ß√£o.
     - Se inv√°lido, retorna erro 422.
3. Retorna √† tela.

## Regras de Neg√≥cio

- Backup inclui apenas dados do usu√°rio (`user_id`).
- Restaura√ß√£o sobrescreve dados ap√≥s confirma√ß√£o.
- Arquivos criptografados com AES-256.
- JSON segue esquema predefinido.

## Notas T√©cnicas

- **Frontend**: Vue.js, Vuetify.
- **Backend**: Laravel, Eloquent (modelos `Account`, `Transaction`, `Category`).
- **Endpoints**:
  - `POST /api/backup`: `{ types: array }` ‚Üí `{ file_url: string }`.
  - `POST /api/restore`: Multipart com JSON.
- **Banco**: Tabelas `accounts`, `transactions`, `categories`, `logs`.
- **Integra√ß√µes**: AWS S3 (Backup Service).
- **Seguran√ßa**: JWT, AES-256, HTTPS.