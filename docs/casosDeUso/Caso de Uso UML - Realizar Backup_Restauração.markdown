üîô [Retornar √† documenta√ß√£o principal](../../README.md)

# Caso de Uso: Realizar Backup e Restaura√ß√£o

## Diagrama de Caso de Uso

```mermaid
usecaseDiagram
    actor Usu√°rio
    actor SistemaExternoBackup
    Usu√°rio --> (Realizar Backup)
    Usu√°rio --> (Realizar Restaura√ß√£o)
    Usu√°rio --> SistemaExternoBackup : usa
```

## Descri√ß√£o

Permite que o usu√°rio realize backup ou restaura√ß√£o de dados (contas, transa√ß√µes, categorias).

## Atores

- **Prim√°rio**: Usu√°rio
- **Secund√°rio**: Sistema Externo de Backup (Google Drive, AWS S3)

## Pr√©-condi√ß√µes

- Usu√°rio est√° autenticado (JWT v√°lido).
- Existem dados em `accounts`, `transactions`, `categories`.

## P√≥s-condi√ß√µes

- Backup √© gerado e baixado/armazenado.
- Dados s√£o restaurados em `accounts`, `transactions`, `categories`.
- Log de a√ß√£o √© registrado em `logs`.

## Fluxo Principal

1. Usu√°rio acessa a tela de backup no frontend.
2. Escolhe a√ß√£o:
   - **Backup**:
     - Seleciona dados (`accounts`, `transactions`, `categories`).
     - Frontend envia `POST /api/backup`.
     - Backend gera arquivo JSON: `{ "accounts": [], "transactions": [], "categories": [] }`.
     - Arquivo √© criptografado (AES-256) e enviado para AWS S3 ou baixado.
   - **Restaura√ß√£o**:
     - Usu√°rio faz upload de arquivo JSON.
     - Frontend envia `POST /api/restore` com arquivo.
     - Backend descriptografa, valida (formato, `user_id`) e importa dados.
     - Atualiza saldos em `accounts`.
3. Backend registra a√ß√£o em `logs` (a√ß√£o: `backup`, `restore`).
4. Frontend exibe confirma√ß√£o.

## Fluxos Alternativos

- **A1**: Arquivo inv√°lido ‚Üí Backend retorna erro 422 ("Formato de arquivo inv√°lido").
- **A2**: Erro no download ‚Üí Frontend exibe erro 500 ("Falha ao baixar") e oferece retry.

## Regras de Neg√≥cio

- Backup inclui apenas dados do usu√°rio (`user_id`).
- Restaura√ß√£o sobrescreve dados ap√≥s confirma√ß√£o.
- Arquivos s√£o criptografados com AES-256.

## Notas T√©cnicas

- **Frontend**: Vue.js, Vuetify (upload/download).
- **Backend**: Laravel, Eloquent (modelos `Account`, `Transaction`, `Category`).
- **Endpoints**:
  - `POST /api/backup`: `{ types: array }` ‚Üí `{ file_url: string }`.
  - `POST /api/restore`: Multipart com arquivo JSON.
- **Banco**: Tabelas `accounts`, `transactions`, `categories`, `logs`.
- **Integra√ß√µes**: AWS S3/Google Drive (Backup Service).
- **Seguran√ßa**: AES-256, JWT, HTTPS.
