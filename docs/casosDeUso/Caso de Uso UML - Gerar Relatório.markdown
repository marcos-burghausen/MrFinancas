üîô [Retornar √† documenta√ß√£o principal](../../README.md)

# Caso de Uso: Gerar Relat√≥rio

## Diagrama de Caso de Uso

```mermaid
usecaseDiagram
    actor Usu√°rio
    Usu√°rio --> (Gerar Relat√≥rio)
```

## Descri√ß√£o

Permite que o usu√°rio gere relat√≥rios financeiros (gr√°ficos ou tabelas) com exporta√ß√£o em PDF/CSV.

## Atores

- **Prim√°rio**: Usu√°rio

## Pr√©-condi√ß√µes

- Usu√°rio est√° autenticado (JWT v√°lido).
- Existem transa√ß√µes em `transactions`.

## P√≥s-condi√ß√µes

- Relat√≥rio √© exibido (gr√°fico ou tabela).
- Relat√≥rio √© exportado (se solicitado).
- Log de gera√ß√£o √© registrado em `logs`.

## Fluxo Principal

1. Usu√°rio acessa a tela de relat√≥rios no frontend.
2. Seleciona tipo: gr√°fico (pizza, linha) ou tabela (balan√ßo mensal).
3. Aplica filtros: `{ start_date, end_date, category_id, account_id }`.
4. Frontend envia `GET /api/reports` com filtros.
5. Backend consulta `transactions`, `accounts`, `categories` e calcula totais.
6. Frontend exibe relat√≥rio usando Chart.js (gr√°ficos) ou Vuetify (tabelas).
7. Usu√°rio clica em "Exportar":
   - PDF: Gera documento com jsPDF.
   - CSV: Gera arquivo com colunas `{ date, amount, category, account }`.
8. Backend registra a√ß√£o em `logs` (a√ß√£o: `generate_report`, detalhes: tipo, filtros).

## Fluxos Alternativos

- **A1**: Nenhum dado para o filtro ‚Üí Backend retorna erro 404 ("Sem dados para o per√≠odo").
- **A2**: Erro na exporta√ß√£o ‚Üí Frontend exibe erro 500 ("Falha ao exportar") e oferece retry.

## Regras de Neg√≥cio

- Relat√≥rios cobrem at√© 1 ano (`start_date >= now() - 1 year`).
- Gr√°ficos: Despesas/receitas por categoria, balan√ßo por per√≠odo.
- CSV: Colunas `{ date: YYYY-MM-DD, amount: decimal, category: string, account: string }`.
- PDF: Inclui t√≠tulo, filtros e dados formatados.

## Notas T√©cnicas

- **Frontend**: Vue.js, Vuetify (tabelas), Chart.js (gr√°ficos), jsPDF (PDF).
- **Backend**: Laravel, Eloquent (modelos `Transaction`, `Account`, `Category`).
- **Endpoint**: `GET /api/reports?start_date=YYYY-MM-DD&end_date=YYYY-MM-DD&category_id=int&account_id=int`.
- **Banco**: Tabela `transactions` (`amount`, `date`, `category_id`, `account_id`); `categories` (`name`); `accounts` (`name`); `logs` (`action`, `details`).
- **Integra√ß√µes**: Chart.js, jsPDF.
- **Seguran√ßa**: Autentica√ß√£o JWT, valida√ß√£o de filtros.
